// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/iqdf/benjerry-service/domain"
	mock "github.com/stretchr/testify/mock"
)

// UserService is an autogenerated mock type for the UserService type
type UserService struct {
	mock.Mock
}

// LoginUser provides a mock function with given fields: ctx, username, hashpass
func (_m *UserService) LoginUser(ctx context.Context, username string, hashpass string) (domain.User, error) {
	ret := _m.Called(ctx, username, hashpass)

	var r0 domain.User
	if rf, ok := ret.Get(0).(func(context.Context, string, string) domain.User); ok {
		r0 = rf(ctx, username, hashpass)
	} else {
		r0 = ret.Get(0).(domain.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, username, hashpass)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterUser provides a mock function with given fields: ctx, username, hashpass, isAdmin
func (_m *UserService) RegisterUser(ctx context.Context, username string, hashpass string, isAdmin bool) error {
	ret := _m.Called(ctx, username, hashpass, isAdmin)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, bool) error); ok {
		r0 = rf(ctx, username, hashpass, isAdmin)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

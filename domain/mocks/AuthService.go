// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	auth "github.com/iqdf/benjerry-service/common/auth"

	mock "github.com/stretchr/testify/mock"
)

// AuthService is an autogenerated mock type for the AuthService type
type AuthService struct {
	mock.Mock
}

// CreateToken provides a mock function with given fields: data
func (_m *AuthService) CreateToken(data auth.CreateTokenData) (string, error) {
	ret := _m.Called(data)

	var r0 string
	if rf, ok := ret.Get(0).(func(auth.CreateTokenData) string); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(auth.CreateTokenData) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyToken provides a mock function with given fields: token
func (_m *AuthService) VerifyToken(token string) (auth.Authentication, bool, error) {
	ret := _m.Called(token)

	var r0 auth.Authentication
	if rf, ok := ret.Get(0).(func(string) auth.Authentication); ok {
		r0 = rf(token)
	} else {
		r0 = ret.Get(0).(auth.Authentication)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(token)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(token)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
